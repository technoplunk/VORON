#	X/Y/E steppers/endstops/thermisters/heaters
#	are on my Fystec Einsy Rambo clone while Z steppers/mechanical switch/endstop_pin
#	are on the RAMPS labeled z. Please change settings for your
#	specific build or ensure you place your items in the same spots on the same
#	MCU as I have.  

#	Using stealhchop is a somewhat problematic, as you have to set a threshold and when the printer accelerates from below
#	the threshold to above the threshold (which will happen once on every move that is above the threshold) the motors make
#	a clicking kind of sound which is much more annoying than just running spreadcycle. Interpolation already makes the motors
#	quieter.

[mcu]
#    mcu for X/Y/E steppers main MCU
#serial: /dev/ttyACM0
serial: /dev/serial/by-id/usb-Prusa_Research__prusa3d.com__Original_Prusa_i3_MK3____________________-if00
baud: 115200
pin_map: arduino
restart_method: arduino

[mcu z]
#    mcu for the Z steppers
#serial: /dev/ttyACM1
serial: /dev/serial/by-id/usb-Arduino__www.arduino.cc__0042_5573932303135101A011-if00
baud: 250000
pin_map: arduino
restart_method: arduino

[stepper_x]
#    use preceding ! to invert logic and ^ to activate internal 5V pullup
#    this is for all pin definitions.  Not all pins have interal pullups
step_pin: ar37
dir_pin: ar49
enable_pin: !ar29
step_distance: 0.0125
endstop_pin: !ar12
position_min: 0
#	ajust this to make the nozzle go exactly to the corner of the bed on G1 X0 Y0
position_endstop: 300
position_max: 300
homing_speed: 100
homing_positive_dir: true

[tmc2130 stepper_x]
cs_pin: ar41
microsteps: 16
run_current: 0.95
#interpolate: false
#hold_current: .4
#stealthchop_threshold: 50
sense_resistor: 0.220
diag1_pin: !analog10

[stepper_y]
step_pin: ar36
dir_pin: ar48
enable_pin: !ar28
step_distance: 0.0125
endstop_pin: !ar11
position_min: -10
position_endstop: 306
position_max: 308
homing_speed: 100
homing_positive_dir: true

[tmc2130 stepper_y]
cs_pin: ar39
microsteps: 16
run_current: 0.95
#interpolate: false
#hold_current: .4
#stealthchop_threshold: 50
sense_resistor: 0.220
diag1_pin: !analog15

[stepper_z]
#	E1 stepper pins on MCU Z
step_pin: z:ar36
dir_pin: !z:ar34
#Enable pins inverted on LV8729, remove the pin negation for different drivers like A4988, DRVs, TMCs...
enable_pin: !z:ar30
step_distance: 0.0025
# FSR switch on mcu_z Z min endstop pin
endstop_pin: !z:ar18
# position endstop is to set your Z offset
position_endstop: 19.05
position_max: 300
position_min: -25
homing_speed: 12
homing_positive_dir: false

[stepper_z1]
#	E0 stepper pins on MCU Z
step_pin: z:ar26
dir_pin: z:ar28
#Enable pins inverted on LV8729, remove the pin negation for different drivers like A4988, DRVs, TMCs...
enable_pin: !z:ar24
step_distance: 0.0025

[stepper_z2]
#	X stepper pins on MCU Z
step_pin: z:ar54
dir_pin: !z:ar55
#Enable pins inverted on LV8729, remove the pin negation for different drivers like A4988, DRVs, TMCs...
enable_pin: !z:ar38
step_distance: 0.0025

[stepper_z3]
#	Y stepper pins on MCU Z
step_pin: z:ar60
dir_pin: z:ar61
#Enable pins inverted on LV8729, remove the pin negation for different drivers like A4988, DRVs, TMCs...
enable_pin: !z:ar56
step_distance: 0.0025

#	used to force a single stepper to move. not used once the printer is set up.
#	Use STEPPER_BUZZ to identfiy steppers
[force_move]
enable_force_move: True

[probe]
#	Z_Min pin on MCU Z (must be on same MCU as steppers)
pin: ^z:ar19
x_offset: 0.0
y_offset: 25.0
z_offset: 2.075
speed: 5

#    this is required for gantry leveling and replaces your G28 command
#    with the gcode used here.  Used to home X/Y/Z with mechanical switches
[homing_override]
gcode:
    G90
    G0 Z25 F2000
    G28 X Y
    G0 X246 F6000
	G0 Y306 F6000
    G28 Z
	G0 Z20
    G0 X290 Y245 F3000 ;distances the X-carriage from the nozzle, in case 5mm rod is too long
axes: z
set_position_z: 0

#    macro to level the gantry.  use G32 in the terminal to call
[gcode_macro g32]
gcode:
    quad_gantry_level
    quad_gantry_level
    quad_gantry_level
    G28

#   quad_gantry_level is to put a moving gantry into plane with a fixed bed.
#	Must have 4 steppers on the gantry
[quad_gantry_level]
#	subtracting the first value from the third should be ~Y-buildsize+120 (length of the X frame-extrusion)
#	subtracting the second from the last should be ~X-buildsize+78
gantry_corners:
    -60,2
    360,380

points:
    50,25
    50,225
    250,225
    250,25

speed: 100
horizontal_move_z: 7
#    Number of times to probe each point
samples = 3
#    How far to lift from the bed between samples
sample_retract_dist = 2.0

[extruder]
# einsy E0 pins
step_pin: ar34
dir_pin: ar43
enable_pin: !ar26
step_distance: 0.001761
nozzle_diameter: 0.400
#	PA can be disabled by declaring a 0.0 value
pressure_advance: 0.07
#	this is to allow a purge line
max_extrude_cross_section: 50.0
#	time seconds to look ahead for PA moves default is 0.010 or 10ms
pressure_advance_lookahead_time: 0.030
filament_diameter: 1.750
#	allows loading filament
max_extrude_only_distance: 800.0
heater_pin: ar3
#using a 60W heater which is a little overpowered
max_power: 0.9
sensor_type: NTC 100K beta 3950
sensor_pin: analog0
smooth_time: 1.0
control: pid
pid_kp = 13.939
pid_ki = 0.460
pid_kd = 105.589
min_extrude_temp: 170
min_temp: 0
max_temp: 300

[tmc2130 extruder]
cs_pin: ar66
microsteps: 16
run_current: .8
#interpolate: false
#stealthchop_threshold: 50
sense_resistor: 0.220
diag1_pin: !analog11


#Heater and temperature sensor verification. Heater verification is
# automatically enabled for each heater that is configured on the
# printer. Use verify_heater sections to change the default settings.
# Due to large temp swing on print cooling fan I've changed this
# to stop mid print heater faults.
[verify_heater extruder]
heating_gain: 1
#   The minimum temperature (in Celsius) that the heater must increase
#   by when approaching a new target temperature. The default is 2.
check_gain_time: 20
#   The amount of time (in seconds) that the heating_gain must be met
#   in before an error is raised. The default is 20 seconds for
#   extruders and 60 seconds for heater_bed.
hysteresis: 5
#   The difference between the target temperature and the current
#   temperature for the heater to be considered within range of the
#   target temperature. The default is 5.
max_error: 600
#   The maximum temperature difference a heater that falls outside the
#   target temperature range may accumulate before an error is
#   raised. For example, if the target temperature is 200, the
#   hysteresis is 5, the max_error is 120, and the temperature is
#   reported at 185 degrees for 12 seconds then an error would be
#   raised (or 24 seconds at 190, or 120 seconds at 194, etc.). The
#   default is 120.


[heater_bed]
#einsy bed terminal
heater_pin: ar4
#Max power for the heater
max_power: 0.66
# NTC 100K MGB18-104F39050L32 is for Kenovo thermistors
sensor_type: NTC 100K beta 3950
sensor_pin: analog1
smooth_time: 3.0
control: pid
pid_Kp: 63.832
pid_Ki: 3.404
pid_Kd: 299.213
min_temp: 0
max_temp: 130

#print cooling fan
[fan]
#On MCU Z on extruder heater pin D9
pin: z:ar9
max_power: 1.0
kick_start_time: 0.5

#thermally controlled hotend fan
[heater_fan hotend_fan]
#einsy nozzle fan
pin: PJ2
#Max power for the heater.
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

#thermally controlled controller fan
[heater_fan controller_fan]
#einsy print cooling fan
pin: PE3
shutdown_speed: 1.0
#cycle_time: 0.01
#hardware_pwm: false
kick_start_time: 1.100
heater: extruder
heater_temp: 50.0
fan_speed: 1.0


#	"RepRapDiscount 128x64 Full Graphic Smart Controller" type displays
#	my 128x64 display is non-standard, so you might need to change this pinout.
[display]
lcd_type: st7920
cs_pin: PG3
sclk_pin: PD5
sid_pin: PG4
encoder_pins: ^PF5, ^PH7
click_pin: ^!PF7
kill_pin: ^!PH6
[static_digital_output buzzer]
pins: !PH2

#caselight output pin, I used the hotend pin on the Z arduino
[output_pin caselight]
pin: z:ar10
pwm: true
hardware_pwm: true
cycle_time: 0.001
value: 0


#	this overwrites the existing main menu setup to add a custom submenu entry in the first position.
#	move entries around as you please or comment out/delete this section to revert to the stock config,
#	but don't delete entries except __custom, as it will break stuff.
[menu __main]
type: list
name: Main Menu
items:
    __custom
    __tune
    __octoprint
    __control
    __temp
    __filament
    __prepare
	__sdcard

#	list the entries in the custom submenu
[menu __custom]
type: list
name: Custom
items:
    .__babystep
    .__+005mm
    .__-005mm
	.__caselight

# slow but very precise runtime Z_offset adjustments
[menu __custom __babystep]
type: input
name: "Babystep:{0:05.3f} "
parameter: gcode.homing_zpos
input_min: -5
input_max: 5
input_step: 0.005
realtime: true
gcode: SET_GCODE_OFFSET Z={0:.3f}

#	quick Z_offset adjustments with larger steps.
[menu __custom __+005mm]
type: command
name: +.05mm
gcode: SET_GCODE_OFFSET Z_ADJUST=+0.05

[menu __custom __-005mm]
type: command
name: -.05mm
gcode: SET_GCODE_OFFSET Z_ADJUST=-0.05

#menu entry for adjusting the case light brightness (see [output_pin caselight])
[menu __custom __caselight]
type: input
enable: output_pin.caselight.is_enabled
name: Case light: {0:4.0%}
parameter: output_pin.caselight.value
input_min: 0.0
input_max: 1.0
input_step: 0.05
gcode: SET_PIN PIN=caselight VALUE={0:.2f}

#CUSTOM GCODE SCRIPTS, very likely need adjustment

#add this at the start of you gcode to add a purge line at the front of your plate
[gcode_macro purge]
gcode: 
	G0 X246 Y10 Z0.3
	G0 X170 E25 F500

[gcode_macro print_start]
gcode:
    G28
    G32
    quad_gantry_level
    nozzle_clean
    G28
    G0 X295 Y10 Z0.3 F9000
    G92 E0
    G1 E14 F600
    G1 X250 E20 F1000
    G92 E0

#    Use print_end for you slicer ending script
[gcode_macro print_end]
gcode:
    M104 S0
    M140 S0
    M107
    G92 E0
    G91
    G1 Z10 E-10 F3000
    G90
    G0 X150 Y295 F3000
    M84

#    Use unload_filament to unload ABS
[gcode_macro unload_filament]
gcode:
    M109 S235
    M83
    G1 E15 F300
    G1 E-780 F1800
    M82

#    Use load_filament to load ABS
[gcode_macro load_filament]
gcode:
    M109 S235
    M83
    G1 E760 F1800
    G1 E30 F300
    G1 E-10 F1800
    M82

#    use nozzle_clean to clean nozzle
#    must change to work for your brush loc
[gcode_macro nozzle_clean]
gcode:
    G0 X253 Y0 Z3 F3000
    G0 Y45
    G0 X254 Y0
    G0 X255 Y45
    G0 X256 Y0
    G0 X257 Y45
    G0 X256 Y0
    G0 X255 Y45
    G0 X254 Y0
    G0 X256 Y55
    G0 Z10


[printer]
# settings below are the max and can't be commanded over in gcode
kinematics: corexy
max_velocity: 400
max_accel: 3000
max_z_velocity: 50
max_z_accel: 400
square_corner_velocity: 10.0
#   The maximum velocity (in mm/s) that the toolhead may travel a 90
#   degree corner at. A non-zero value can reduce changes in extruder
#   flow rates by enabling instantaneous velocity changes of the
#   toolhead during cornering. This value configures the internal
#   centripetal velocity cornering algorithm; corners with angles
#   larger than 90 degrees will have a higher cornering velocity while
#   corners with angles less than 90 degrees will have a lower
#   cornering velocity. If this is set to zero then the toolhead will
#   decelerate to zero at each corner. The default is 5mm/s.

[idle_timeout]
# 10 minutes idle time out
gcode:
    G0 X295 Y295 F6000
    M84
timeout: 1800

[static_digital_output yellow_led]
pins: !ar13

#    use BED_MESH_CALIBRATE to run a bed mesh.  Not saved
#    this is for uneven beds.

[bed_mesh]
speed: 100
horizontal_move_z: 5
#min_point: 20,0
#max_point: 280,255
min_point: 50,50
max_point: 250,250
probe_count: 7,7
fade_start: 1.0
fade_end: 10.0
split_delta_z: .025
move_check_distance: 5.0
mesh_pps: 5,5
algorithm: lagrange

#   The interpolation algorthm to use.  May be either "langrange"
#   or "bicubic".  This option will not affect 3x3 grids, which
#   are forced to use lagrange sampling.  Default is lagrange.
#bicubic_tension: .2
#   When using the bicubic algoritm the tension parameter above
#   may be applied to change the amount of slope interpolated.
#   Larger numbers will increase the amount of slope, which
#   results in more curvature in the mesh. Default is .2.

#    Use print_start for the slicer starting script
#    change for your starting scripting needs

# BED_MESH_CALIBRATE: Perform Mesh Bed Leveling
# BED_MESH_CLEAR: Clear the Mesh so no z-adjusment is made
# BED_MESH_MAP: Probe the bed and serialize output
# BED_MESH_OUTPUT: Retrieve interpolated grid of probed z-points
# FIRMWARE_RESTART: Restart firmware, host, and reload config
# G32       : G-Code macro
# GANTRY_LEVEL: Conform a moving, twistable gantry to the shape of a stationary bed
# LOAD_FILAMENT: G-Code macro
# MENU      : Menu do things
# NOZZLE_CLEAN: G-Code macro
# PID_CALIBRATE: Run PID calibration test
# PRINT_END : G-Code macro
# PRINT_START: G-Code macro
# PROBE     : Probe Z-height at current XY position
# QUERY_ENDSTOPS: Report on the status of each endstop
# QUERY_PROBE: Return the status of the z-probe
# RESTART   : Reload config file and restart host software
# SET_GCODE_OFFSET: Set a virtual offset to g-code positions
# SET_PRESSURE_ADVANCE: Set pressure advance parameters
# SET_VELOCITY_LIMIT: Set printer velocity limits
# STATUS    : Report the printer status
# STEPPER_BUZZ: Oscillate a given stepper to help id it
# UNLOAD_FILAMENT: G-Code macro
# Z_TILT_ADJUST: Adjust the Z tilt
# SET_PIN PIN=config_name VALUE=<value>
