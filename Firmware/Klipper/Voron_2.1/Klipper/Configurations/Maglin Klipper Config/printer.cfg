# This file is an example configuration for the Voron 2 CoreXY printer
# running on two RAMPS boards. This file was created by "Maglin".
# X/Y/E steppers/endstops/thermisters/heaters are on one MCU/RAMPS
# board while Z steppers/mechanical switch/endstop_pin are on the
# second MCU/RAMPS labeled z.  CAO 16 November 2018

# This file is only an example - be sure to review and update it
# according to the specifics of your printer. See the example.cfg and
# example-extras.cfg files for a description of available parameters.

[mcu]
#    mcu for X/Y/E steppers main MCU
serial: /dev/serial/by-id/usb-Arduino__www.arduino.cc__0042_75636313137351801102-if00
pin_map: arduino

[mcu z]
#    mcu for the Z steppers
serial: /dev/serial/by-id/usb-Arduino__www.arduino.cc__0042_856323332363515111B2-if00
pin_map: arduino

[stepper_x]
#    use preceding ! to invert logic and ^ to activate internal 5V pullup
#    this is for all pin definitions.  Not all pins have interal pullups
step_pin: ar54
dir_pin: ar55
enable_pin: !ar38
step_distance: 0.0125
endstop_pin: ^ar2
position_min: 0
position_endstop: 257
position_max: 258
homing_speed: 100
homing_positive_dir: true

[stepper_y]
step_pin: ar60
dir_pin: ar61
enable_pin: !ar56
step_distance: 0.0125
endstop_pin: ^ar15
position_min: -10
position_endstop: 245
position_max: 245
homing_speed: 100
homing_positive_dir: true

[stepper_z]
# X stepper pins on MCU Z
step_pin: z:ar54
dir_pin: !z:ar55
enable_pin: !z:ar38
step_distance: 0.00250
# FSR switch on mcu_z X max endstop pin
endstop_pin: ^!z:ar2
# position endstop is to set your Z offset
position_endstop: 1.95
position_max: 255
position_min: -25
homing_speed: 12
homing_positive_dir: false

[stepper_z1]
# Y stepper pins on MCU Z
step_pin: z:ar60
dir_pin: z:ar61
enable_pin: !z:ar56
step_distance: 0.00250

[stepper_z2]
# Z stepper pins on MCU Z
step_pin: z:ar46
dir_pin: !z:ar48
enable_pin: !z:ar62
step_distance: 0.00250

[stepper_z3]
# E0 stepper pins on MCU Z
step_pin: z:ar26
dir_pin: z:ar28
enable_pin: !z:ar24
step_distance: 0.00250

[probe]
# Z_Min pins on MCU Z (must be on same MCU as steppers)
pin: ^!z:ar18
x_offset: 0.0
y_offset: 25.0
z_offset: 2.075
speed: 5

#    this is required for gantry leveling and replaces your G28 command
#    with the gcode used here.  Used to home X/Y/Z with mechanical switches
[homing_override]
gcode:
    G90
    G28 X Y
    G0 X250.2 Y234.5 F6000
    G28 Z
    G0 Z10 F3000
axes: z

#    macro to level the gantry.  use G32 in the terminal to call
[gcode_macro g32]
gcode:
    quad_gantry_level
    quad_gantry_level
    G28
    G0 X125 Y125 Z10 F6000

#    quad_gantry_level is to put a moving gantry into plan with
#    a fixed bed.  Must have 4 steppers on the gantry
#    use QUAD_GANTRY_LEVEL to level a gantry.
[quad_gantry_level]
gantry_corners:
    -59,-20
    307,305

points:
    50,25
    50,175
    200,175
    200,25

speed: 200
horizontal_move_z: 10
#    Number of time to probe a point
samples = 1
#    How far to retract from the probe point for multi-probe samples
sample_retract_dist = 2.0

#    use BED_MESH_CALIBRATE to create a bed mesh.
[bed_mesh]
speed: 100
horizontal_move_z: 10
min_point: 20,5
max_point: 230,220
probe_count: 5,5
fade_start: 1.0
fade_end: 10.0
split_delta_z: .025
move_check_distance: 5.0
mesh_pps: 2,2
algorithm: lagrange
#   The interpolation algorthm to use.  May be either "langrange"
#   or "bicubic".  This option will not affect 3x3 grids, which
#   are forced to use lagrange sampling.  Default is lagrange.
#bicubic_tension: .2
#   When using the bicubic algoritm the tension parameter above
#   may be applied to change the amount of slope interpolated.
#   Larger numbers will increase the amount of slope, which
#   results in more curvature in the mesh. Default is .2.

#    Use print_start for the slicer starting script
#    change for your starting scripting needs
[gcode_macro print_start]
gcode:
    G28
    G32
    nozzle_clean
    G28
    G0 X245 Y10 Z0.3 F9000
    G92 E0
    G1 E14 F600
    G1 X200 E20 F1000
    G92 E0

#    Use print_end for you slicer ending script
[gcode_macro print_end]
gcode:
    M104 S0
    M140 S0
    M107
    G92 E0
    G91
    G1 Z10 E-10 F3000
    G90
    G0 X125 Y245 F3000
    M84

#    Use unload_filament to unload ABS
[gcode_macro unload_filament]
gcode:
    M109 S235
    M83
    G1 E15 F300
    G1 E-780 F1800
    M82

#    Use load_filament to load ABS
[gcode_macro load_filament]
gcode:
    M109 S235
    M83
    G1 E760 F1800
    G1 E30 F300
    G1 E-10 F1800
    M82

#    use nozzle_clean to clean nozzle
#    must change to work for your brush loc
[gcode_macro nozzle_clean]
gcode:
    G0 X253 Y45 Z3 F3000
    G0 X254 Y0
    G0 X255 Y45
    G0 X256 Y0
    G0 X257 Y45
    G0 X256 Y0
    G0 X255 Y45
    G0 X254 Y0
    G0 X256 Y55
    G0 Z10
    
#    use probe_repeatability in your terminal to test 
#    your inductive probe's repeatability
[gcode_macro probe_repeatability]
gcode:
    G28
    G32
    G0 Z10 F9000
    G0 X125 Y125 F9000
    G4 P1000
    probe
    G0 Z10 F9000
    G4 P1000
    probe
    G0 Z10 F9000
    G4 P1000
    probe
    G0 Z10 F9000
    G4 P1000
    probe
    G0 Z10 F9000
    G4 P1000
    probe
    G0 Z10 F9000
    
[extruder]
# on E0 stepper pins of main MCU
step_pin: ar26
dir_pin: ar28
enable_pin: !ar24
step_distance: 0.001761
nozzle_diameter: 0.50
# PA can be disabled by declaring a 0.0 value
pressure_advance: 0.04
# time seconds to look ahead for PA moves default is 0.010 or 10ms
pressure_advance_lookahead_time: 0.010
filament_diameter: 1.750
max_extrude_only_distance: 800.0
heater_pin: ar10
sensor_type: ATC Semitec 104GT-2
sensor_pin: analog13
smooth_time: 1.0
#control: pid
#pid_Kp: 21.759
#pid_Ki: 1.107
#pid_Kd: 106.889
min_extrude_temp: 170
min_temp: 0
max_temp: 300

# Heater and temperature sensor verification. Heater verification is
# automatically enabled for each heater that is configured on the
# printer. Use verify_heater sections to change the default settings.
# Due to large temp swing on print cooling fan I've changed this
# to stop mid print heater faults.
[verify_heater extruder]
heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by when approaching a new target temperature. The default is 2.
check_gain_time: 40
#   The amount of time (in seconds) that the heating_gain must be met
#   in before an error is raised. The default is 20 seconds for
#   extruders and 60 seconds for heater_bed.
hysteresis: 10
#   The difference between the target temperature and the current
#   temperature for the heater to be considered within range of the
#   target temperature. The default is 5.
max_error: 600
#   The maximum temperature difference a heater that falls outside the
#   target temperature range may accumulate before an error is
#   raised. For example, if the target temperature is 200, the
#   hysteresis is 5, the max_error is 120, and the temperature is
#   reported at 185 degrees for 12 seconds then an error would be
#   raised (or 24 seconds at 190, or 120 seconds at 194, etc.). The
#   default is 120.

#    thermally controlled hotend fan
[heater_fan my_nozzle_fan]
# Located on MCU Z on fan D9
pin: z:ar9
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

#    thermally controlled controller fan
[heater_fan my_controller_fan]
# Located on MCU on fan D9
pin: ar9
shutdown_speed: 1.0
#cycle_time: 0.01
#hardware_pwm: true
kick_start_time: 1.100
heater: extruder
heater_temp: 50.0
fan_speed: 0.9

[heater_bed]
# connected to mcu_z heated bed D8
heater_pin: ar8
#    Max power for the heater.  I'm using 66% max power.
max_power: 0.66
# NTC 100K MGB18-104F39050L32 is for Kenovo thermistors
sensor_type: NTC 100K MGB18-104F39050L32
#sensor_type: EPCOS 100K B57560G104F
#sensor_type: NTC 100K beta 3950
sensor_pin: analog14
# pullup_resistor: 4700
# adc_voltage: 5.0
smooth_time: 3.0
control: pid
pid_Kp: 63.832
pid_Ki: 3.404
pid_Kd: 299.213
min_temp: 0
max_temp: 130

# print part cooling fan
[fan]
# On MCU Z on extruder heater pin D10
pin: z:ar10

# "RepRapDiscount 2004 Smart Controller" type displays
#[display]
#lcd_type: hd44780
#rs_pin: ar16
#e_pin: ar17
#d4_pin: ar23
#d5_pin: ar25
#d6_pin: ar27
#d7_pin: ar29
#encoder_pins: ^ar31, ^ar33
#click_pin: ^!ar35

# "RepRapDiscount 128x64 Full Graphic Smart Controller" type displays
[display]
lcd_type: st7920
cs_pin: ar16
sclk_pin: ar23
sid_pin: ar17
encoder_pins: ^ar31, ^ar33
click_pin: ^!ar35
#kill_pin: ^!ar41

[printer]
# settings below are the max and can't be commanded over in gcode
kinematics: corexy
max_velocity: 500
max_accel: 4000
max_z_velocity: 50
max_z_accel: 400
square_corner_velocity: 10.0
#   The maximum velocity (in mm/s) that the toolhead may travel a 90
#   degree corner at. A non-zero value can reduce changes in extruder
#   flow rates by enabling instantaneous velocity changes of the
#   toolhead during cornering. This value configures the internal
#   centripetal velocity cornering algorithm; corners with angles
#   larger than 90 degrees will have a higher cornering velocity while
#   corners with angles less than 90 degrees will have a lower
#   cornering velocity. If this is set to zero then the toolhead will
#   decelerate to zero at each corner. The default is 5mm/s.

[idle_timeout]
# 10 minutes idle time out
gcode:
    G0 X125 Y245 F6000
    M84
timeout: 1800

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 16.724
#*# pid_ki = 0.587
#*# pid_kd = 119.160
